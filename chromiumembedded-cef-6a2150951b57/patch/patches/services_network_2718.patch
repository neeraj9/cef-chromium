diff --git content/browser/storage_partition_impl.cc content/browser/storage_partition_impl.cc
index fe8318f3c4f6f..9c3a9cb356b0f 100644
--- content/browser/storage_partition_impl.cc
+++ content/browser/storage_partition_impl.cc
@@ -3267,8 +3267,12 @@ void StoragePartitionImpl::GetQuotaSettings(
     return;
   }
 
+  // CEF always returns false for IsOffTheRecord(), so also check the path.
+  const bool is_incognito = browser_context_->IsOffTheRecord() ||
+                            browser_context_->GetPath().empty();
+
   storage::GetNominalDynamicSettings(
-      GetPath(), browser_context_->IsOffTheRecord(),
+      GetPath(), is_incognito,
       storage::GetDefaultDeviceInfoHelper(), std::move(callback));
 }
 
@@ -3278,9 +3282,12 @@ void StoragePartitionImpl::InitNetworkContext() {
   cert_verifier::mojom::CertVerifierCreationParamsPtr
       cert_verifier_creation_params =
           cert_verifier::mojom::CertVerifierCreationParams::New();
-  GetContentClient()->browser()->ConfigureNetworkContextParams(
+  if (!GetContentClient()->browser()->ConfigureNetworkContextParams(
       browser_context_, is_in_memory(), relative_partition_path_,
-      context_params.get(), cert_verifier_creation_params.get());
+      context_params.get(), cert_verifier_creation_params.get())) {
+    // Don't re-initialize the network context during shutdown.
+    return;
+  }
   // Should be initialized with existing per-profile CORS access lists.
   DCHECK(context_params->cors_origin_access_list.empty())
       << "NetworkContextParams::cors_origin_access_list should be populated "
